# Always tell why tests fail
test --test_output=errors

# We use Bazel's modern dependency management system for development.
build --enable_bzlmod=true

# We are not yet sure if we really want to lock the bzlmod resolution down given we test with various Bazel versions
# and configurations. It seems the main benefits of the lock file are not having to reanalyze the central registry
# when working without a cached workspace and being safeguarded against changed or yanked modules in the central
# registry. Both don't matter much to us right now.
build --lockfile_mode=off

# When working with hermetic Python toolchains, supporting the legacy runfiles layout is needlessly wasting resources.
# See https://github.com/bazelbuild/rules_python/issues/1653
build --nolegacy_external_runfiles

# Mypy integration
build:mypy --aspects=@mypy_integration//:mypy.bzl%mypy_aspect
build:mypy --output_groups=mypy
build:mypy --@mypy_integration//:mypy=//third_party:mypy
build:mypy --@mypy_integration//:mypy_config=//:mypy.ini

# Allow users to provide their own workspace settings
try-import %workspace%/user.bazelrc
