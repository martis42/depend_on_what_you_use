name: CI

on: [pull_request]

jobs:
  pre-commit:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - run: source .venv/bin/activate
      - uses: pre-commit/action@v3.0.0

  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Cache bazel
        uses: actions/cache@v3
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            ~/.cache/bazel
          key: ${{ runner.os }}-${{ env.cache-name }}
      - uses: actions/checkout@v3
      - name: Build and test the code
        run: bazel test //src/... //test/aspect:all
      - name: Execute Mypy
        run: bazel build --config=mypy //src/... //test/aspect:all

  # tests:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: snok/install-poetry@v1
  #     with:
  #       virtualenvs-create: true
  #       virtualenvs-in-project: true
  #       installer-parallel: true
  #   - uses: actions/setup-python@v3
  #     with:
  #       python-version: 3.8
  #       cache: 'poetry'
  #   - name: Install dependencies
  #     run: poetry install --no-interaction --no-root
  #   - name: Display Python version
  #     run: python -c "import sys; print(sys.version)"
  #   - name: Coverage
  #     run: poetry run pytest --cov --pylint
