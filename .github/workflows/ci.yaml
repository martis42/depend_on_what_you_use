name: CI

on: [ pull_request ]

jobs:
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - run: source .venv/bin/activate
      - uses: pre-commit/action@v3.0.0

  fast-tests:
    runs-on: ubuntu-22.04
    needs: [ pre-commit ]
    steps:
      - uses: actions/checkout@v4
      - name: Unit tests
        run: ./scripts/unit_tests.sh
      - name: Execute Mypy
        run: ./scripts/mypy.sh
      - name: Build aspect integration tests
        run: |
          cd test/aspect
          bazel build //...
      - name: Build examples
        run: |
          cd examples
          bazel build //...

  integration-tests-aspect:
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022 ]
    runs-on: ${{ matrix.os }}
    needs: [ fast-tests ]
    steps:
      - uses: actions/checkout@v4
      - name: Integration tests - Aspect
        if: runner.os != 'Windows'
        run: |
          cd test
          cd aspect
          python execute_tests.py
      - name: Integration tests - Aspect
        if: runner.os == 'Windows'
        run: |
          cd test
          cd aspect
          python execute_tests.py -b 7.0.0 -p 3.8.18

  integration-tests-apply-fixes:
    runs-on: ubuntu-22.04
    needs: [ fast-tests ]
    steps:
      - run: |
          mkdir --parents /tmp/bin
          wget --no-verbose https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildozer-linux-amd64 -O /tmp/bin/buildozer
          chmod +x /tmp/bin/buildozer
      - uses: actions/checkout@v4
      - name: Integration tests - Applying fixes
        run: |
          export PATH=/tmp/bin:$PATH
          ./test/apply_fixes/execute_tests.py

  integration-tests-examples:
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-12, windows-2022 ]
    runs-on: ${{ matrix.os }}
    needs: [ fast-tests ]
    steps:
      - uses: actions/checkout@v4
      - name: Integration tests - Examples
        run: |
          cd examples
          python test.py
      - name: Integration tests - Examples with legacy WORKSPACE setup
        run: |
          cd examples
          python test.py --legacy-workspace
