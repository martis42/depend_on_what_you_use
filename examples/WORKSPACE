workspace(name = "dwyu_examples")

local_repository(
    name = "depend_on_what_you_use",
    path = "../",
)

load("@depend_on_what_you_use//:setup_step_1.bzl", "setup_step_1")

setup_step_1()

load("@depend_on_what_you_use//:setup_step_2.bzl", "setup_step_2")

setup_step_2()

#
# One can use DWYU without the content below. The hermetic Python toolchain merely increases the reproducibility when
# executing the examples as integration test.
#

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

maybe(
    http_archive,
    name = "rules_python",
    sha256 = "9acc0944c94adb23fba1c9988b48768b1bacc6583b52a2586895c5b7491e2e31",
    strip_prefix = "rules_python-0.27.0",
    urls = ["https://github.com/bazelbuild/rules_python/releases/download/0.27.0/rules_python-0.27.0.tar.gz"],
)

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python",
    python_version = "3.8",
)
